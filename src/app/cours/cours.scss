/**
 * For the correct positioning of the placeholder element, the dnd-list and
 * it's children must have position: relative
 */
.simpleDemo ul[dnd-list],
.simpleDemo ul[dnd-list] > li {
	position: relative;
}
/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
.simpleDemo ul[dnd-list] {
	min-height: 75px;
	padding-left: 0;
}
/**
 * The dndDraggingSource class will be applied to
 * the source element of a drag operation. It makes
 * sense to hide it to give the user the feeling
 * that he's actually moving it.
 */
.simpleDemo ul[dnd-list] .dndDraggingSource {
	display: none;
}
/**
 * An element with .dndPlaceholder class will be
 * added to the dnd-list while the user is dragging
 * over it.
 */
.simpleDemo ul[dnd-list] .dndPlaceholder {
	display: block;
	background-color: #ddd;
	min-height: 42px;
}
/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
.simpleDemo ul[dnd-list] li {
	background-color: #fff;
	border: 1px solid #ddd;
	border-top-right-radius: 4px;
	border-top-left-radius: 4px;
	display: block;
	padding: 10px 15px;
	margin-bottom: -1px;
}
/**
 * Show selected elements in green
 */
.simpleDemo ul[dnd-list] li.selected {
	background-color: #dff0d8;
	color: #3c763d;
}
/** Override bootstrap**/
.simpleDemo .form-group {
	margin-bottom: 5px;
}
.simpleDemo .panel-body {
	padding: 5px;
}
.simpleDemo .col-md-1,
.simpleDemo .col-md-2,
.simpleDemo .col-md-3,
.simpleDemo .col-md-4,
.simpleDemo .col-md-5,
.simpleDemo .col-md-6,
.simpleDemo .col-md-7,
.simpleDemo .col-md-8 {
	padding-left: 5px;
	padding-right: 5px;
}
.simpleDemo .panel-title .btn-sm {
	padding: 0;
}

.simpleDemo .panel-heading {
padding: 5px;
}
